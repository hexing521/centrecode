<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<!DOCTYPE generatorConfiguration-->
        <!--PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"-->
        <!--"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">-->

<!--<generatorConfiguration>-->
    <!--&lt;!&ndash;导入属性配置&ndash;&gt;-->
    <!--<properties resource="generator.properties"></properties>-->

    <!--<context id="default" targetRuntime="MyBatis3">-->

        <!--&lt;!&ndash; optional，旨在创建class时，对注释进行控制 &ndash;&gt;-->
        <!--<commentGenerator>-->
            <!--&lt;!&ndash;是否去掉自动生成的注释 true:是&ndash;&gt;-->
            <!--<property name="suppressDate" value="true"/>-->
            <!--<property name="suppressAllComments" value="true"/>-->
        <!--</commentGenerator>-->

        <!--&lt;!&ndash;数据库连接的信息：驱动类、连接地址、用户名、密码 &ndash;&gt;-->
        <!--<jdbcConnection driverClass="${jdbc.driverClass}"-->
                        <!--connectionURL="${jdbc.connectionURL}" userId="${jdbc.userId}"-->
                        <!--password="${jdbc.password}">-->
        <!--</jdbcConnection>-->


        <!--&lt;!&ndash; 类型处理器，在数据库类型和java类型之间的转换控制&ndash;&gt;-->
        <!--<javaTypeResolver>-->
            <!--<property name="forceBigDecimals" value="false"/>-->
        <!--</javaTypeResolver>-->


        <!--&lt;!&ndash; Model模型生成器,用来生成pojo类-->
            <!--targetPackage     指定生成的model生成所在的包名-->
            <!--targetProject     指定在该项目下所在的路径-->
        <!--&ndash;&gt;-->
        <!--<javaModelGenerator targetPackage="com.smallsoup.mybatis.pojo"-->
                            <!--targetProject="src/main/java">-->

            <!--&lt;!&ndash; 是否允许子包，即targetPackage.schemaName.tableName &ndash;&gt;-->
            <!--<property name="enableSubPackages" value="false"/>-->
            <!--&lt;!&ndash; 是否对model添加 构造函数 &ndash;&gt;-->
            <!--<property name="constructorBased" value="true"/>-->
            <!--&lt;!&ndash; 是否对类CHAR类型的列的数据进行trim操作 &ndash;&gt;-->
            <!--<property name="trimStrings" value="true"/>-->
            <!--&lt;!&ndash; 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 &ndash;&gt;-->
            <!--<property name="immutable" value="false"/>-->
        <!--</javaModelGenerator>-->

        <!--&lt;!&ndash;Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 &ndash;&gt;-->
        <!--<sqlMapGenerator targetPackage="com.smallsoup.mybatis.dao.mapper"-->
                         <!--targetProject="src/main/java">-->
            <!--<property name="enableSubPackages" value="false"/>-->
        <!--</sqlMapGenerator>-->

        <!--&lt;!&ndash;       自动生成的*Mapper.java存放路径-->
             <!--type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象-->
             <!--type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象-->
             <!--type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口-->
        <!--&ndash;&gt;-->
        <!--<javaClientGenerator targetPackage="com.smallsoup.mybatis.dao"-->
                             <!--targetProject="src/main/java" type="XMLMAPPER">-->
            <!--<property name="enableSubPackages" value="true"/>-->
        <!--</javaClientGenerator>-->

        <!--&lt;!&ndash; 指定数据库中想要生成哪些表的mapper和pojo-->

        <!--数据表进行生成操作 tableName:表名; domainObjectName:对应的DO-->

        <!--如果想要mapper配置文件加入sql的where条件查询, 可以将enableCountByExample等设为true,-->
        <!--这样就会生成一个对应domainObjectName的Example类, enableCountByExample等设为false时,-->
        <!--就不会生成对应的Example类了-->
         <!--&ndash;&gt;-->
        <!--<table tableName="project" domainObjectName="ProjectDo"-->
               <!--enableCountByExample="true" enableUpdateByExample="false"-->
               <!--enableDeleteByExample="false" enableSelectByExample="false"-->
               <!--selectByExampleQueryId="false">-->
        <!--</table>-->

    <!--</context>-->
<!--</generatorConfiguration>-->