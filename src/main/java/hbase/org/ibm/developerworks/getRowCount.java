// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibmDeveloperworksDemo.proto
// commandï¼š

package hbase.org.ibm.developerworks;

public final class getRowCount {
    private getRowCount() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public interface getRowCountRequestOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required bool reCount = 1;

        /**
         * <code>required bool reCount = 1;</code>
         */
        boolean hasReCount();

        /**
         * <code>required bool reCount = 1;</code>
         */
        boolean getReCount();
    }

    /**
     * Protobuf type {@code getRowCountRequest}
     */
    public static final class getRowCountRequest extends
            com.google.protobuf.GeneratedMessage
            implements getRowCountRequestOrBuilder {
        // Use getRowCountRequest.newBuilder() to construct.
        private getRowCountRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private getRowCountRequest(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final getRowCountRequest defaultInstance;

        public static getRowCountRequest getDefaultInstance() {
            return defaultInstance;
        }

        public getRowCountRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private getRowCountRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            reCount_ = input.readBool();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountRequest_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.class, hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.Builder.class);
        }

        public static com.google.protobuf.Parser<getRowCountRequest> PARSER =
                new com.google.protobuf.AbstractParser<getRowCountRequest>() {
                    public getRowCountRequest parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new getRowCountRequest(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<getRowCountRequest> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required bool reCount = 1;
        public static final int RECOUNT_FIELD_NUMBER = 1;
        private boolean reCount_;

        /**
         * <code>required bool reCount = 1;</code>
         */
        public boolean hasReCount() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required bool reCount = 1;</code>
         */
        public boolean getReCount() {
            return reCount_;
        }

        private void initFields() {
            reCount_ = false;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasReCount()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, reCount_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, reCount_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(hbase.org.ibm.developerworks.getRowCount.getRowCountRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code getRowCountRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements hbase.org.ibm.developerworks.getRowCount.getRowCountRequestOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountRequest_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.class, hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.Builder.class);
            }

            // Construct using hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                reCount_ = false;
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountRequest_descriptor;
            }

            public hbase.org.ibm.developerworks.getRowCount.getRowCountRequest getDefaultInstanceForType() {
                return hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.getDefaultInstance();
            }

            public hbase.org.ibm.developerworks.getRowCount.getRowCountRequest build() {
                hbase.org.ibm.developerworks.getRowCount.getRowCountRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public hbase.org.ibm.developerworks.getRowCount.getRowCountRequest buildPartial() {
                hbase.org.ibm.developerworks.getRowCount.getRowCountRequest result = new hbase.org.ibm.developerworks.getRowCount.getRowCountRequest(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.reCount_ = reCount_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof hbase.org.ibm.developerworks.getRowCount.getRowCountRequest) {
                    return mergeFrom((hbase.org.ibm.developerworks.getRowCount.getRowCountRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(hbase.org.ibm.developerworks.getRowCount.getRowCountRequest other) {
                if (other == hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.getDefaultInstance())
                    return this;
                if (other.hasReCount()) {
                    setReCount(other.getReCount());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasReCount()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                hbase.org.ibm.developerworks.getRowCount.getRowCountRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (hbase.org.ibm.developerworks.getRowCount.getRowCountRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // required bool reCount = 1;
            private boolean reCount_;

            /**
             * <code>required bool reCount = 1;</code>
             */
            public boolean hasReCount() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required bool reCount = 1;</code>
             */
            public boolean getReCount() {
                return reCount_;
            }

            /**
             * <code>required bool reCount = 1;</code>
             */
            public Builder setReCount(boolean value) {
                bitField0_ |= 0x00000001;
                reCount_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required bool reCount = 1;</code>
             */
            public Builder clearReCount() {
                bitField0_ = (bitField0_ & ~0x00000001);
                reCount_ = false;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:getRowCountRequest)
        }

        static {
            defaultInstance = new getRowCountRequest(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:getRowCountRequest)
    }

    public interface getRowCountResponseOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required int64 rowCount = 1;

        /**
         * <code>required int64 rowCount = 1;</code>
         */
        boolean hasRowCount();

        /**
         * <code>required int64 rowCount = 1;</code>
         */
        long getRowCount();
    }

    /**
     * Protobuf type {@code getRowCountResponse}
     */
    public static final class getRowCountResponse extends
            com.google.protobuf.GeneratedMessage
            implements getRowCountResponseOrBuilder {
        // Use getRowCountResponse.newBuilder() to construct.
        private getRowCountResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private getRowCountResponse(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final getRowCountResponse defaultInstance;

        public static getRowCountResponse getDefaultInstance() {
            return defaultInstance;
        }

        public getRowCountResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private getRowCountResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            rowCount_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountResponse_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.class, hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.Builder.class);
        }

        public static com.google.protobuf.Parser<getRowCountResponse> PARSER =
                new com.google.protobuf.AbstractParser<getRowCountResponse>() {
                    public getRowCountResponse parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new getRowCountResponse(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<getRowCountResponse> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required int64 rowCount = 1;
        public static final int ROWCOUNT_FIELD_NUMBER = 1;
        private long rowCount_;

        /**
         * <code>required int64 rowCount = 1;</code>
         */
        public boolean hasRowCount() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required int64 rowCount = 1;</code>
         */
        public long getRowCount() {
            return rowCount_;
        }

        private void initFields() {
            rowCount_ = 0L;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasRowCount()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, rowCount_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, rowCount_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(hbase.org.ibm.developerworks.getRowCount.getRowCountResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code getRowCountResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements hbase.org.ibm.developerworks.getRowCount.getRowCountResponseOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.class, hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.Builder.class);
            }

            // Construct using hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                rowCount_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return hbase.org.ibm.developerworks.getRowCount.internal_static_getRowCountResponse_descriptor;
            }

            public hbase.org.ibm.developerworks.getRowCount.getRowCountResponse getDefaultInstanceForType() {
                return hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.getDefaultInstance();
            }

            public hbase.org.ibm.developerworks.getRowCount.getRowCountResponse build() {
                hbase.org.ibm.developerworks.getRowCount.getRowCountResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public hbase.org.ibm.developerworks.getRowCount.getRowCountResponse buildPartial() {
                hbase.org.ibm.developerworks.getRowCount.getRowCountResponse result = new hbase.org.ibm.developerworks.getRowCount.getRowCountResponse(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.rowCount_ = rowCount_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof hbase.org.ibm.developerworks.getRowCount.getRowCountResponse) {
                    return mergeFrom((hbase.org.ibm.developerworks.getRowCount.getRowCountResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(hbase.org.ibm.developerworks.getRowCount.getRowCountResponse other) {
                if (other == hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.getDefaultInstance())
                    return this;
                if (other.hasRowCount()) {
                    setRowCount(other.getRowCount());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasRowCount()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                hbase.org.ibm.developerworks.getRowCount.getRowCountResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (hbase.org.ibm.developerworks.getRowCount.getRowCountResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // required int64 rowCount = 1;
            private long rowCount_;

            /**
             * <code>required int64 rowCount = 1;</code>
             */
            public boolean hasRowCount() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required int64 rowCount = 1;</code>
             */
            public long getRowCount() {
                return rowCount_;
            }

            /**
             * <code>required int64 rowCount = 1;</code>
             */
            public Builder setRowCount(long value) {
                bitField0_ |= 0x00000001;
                rowCount_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required int64 rowCount = 1;</code>
             */
            public Builder clearRowCount() {
                bitField0_ = (bitField0_ & ~0x00000001);
                rowCount_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:getRowCountResponse)
        }

        static {
            defaultInstance = new getRowCountResponse(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:getRowCountResponse)
    }

    /**
     * Protobuf service {@code ibmDeveloperWorksService}
     */
    public static abstract class ibmDeveloperWorksService
            implements com.google.protobuf.Service {
        protected ibmDeveloperWorksService() {
        }

        public interface Interface {
            /**
             * <code>rpc getRowCount(.getRowCountRequest) returns (.getRowCountResponse);</code>
             */
            public abstract void getRowCount(
                    com.google.protobuf.RpcController controller,
                    hbase.org.ibm.developerworks.getRowCount.getRowCountRequest request,
                    com.google.protobuf.RpcCallback<hbase.org.ibm.developerworks.getRowCount.getRowCountResponse> done);

        }

        public static com.google.protobuf.Service newReflectiveService(
                final Interface impl) {
            return new ibmDeveloperWorksService() {
                @java.lang.Override
                public void getRowCount(
                        com.google.protobuf.RpcController controller,
                        hbase.org.ibm.developerworks.getRowCount.getRowCountRequest request,
                        com.google.protobuf.RpcCallback<hbase.org.ibm.developerworks.getRowCount.getRowCountResponse> done) {
                    impl.getRowCount(controller, request, done);
                }

            };
        }

        public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
            return new com.google.protobuf.BlockingService() {
                public final com.google.protobuf.Descriptors.ServiceDescriptor
                getDescriptorForType() {
                    return getDescriptor();
                }

                public final com.google.protobuf.Message callBlockingMethod(
                        com.google.protobuf.Descriptors.MethodDescriptor method,
                        com.google.protobuf.RpcController controller,
                        com.google.protobuf.Message request)
                        throws com.google.protobuf.ServiceException {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.callBlockingMethod() given method descriptor for " +
                                        "wrong service type.");
                    }
                    switch (method.getIndex()) {
                        case 0:
                            return impl.getRowCount(controller, (hbase.org.ibm.developerworks.getRowCount.getRowCountRequest) request);
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

                public final com.google.protobuf.Message
                getRequestPrototype(
                        com.google.protobuf.Descriptors.MethodDescriptor method) {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.getRequestPrototype() given method " +
                                        "descriptor for wrong service type.");
                    }
                    switch (method.getIndex()) {
                        case 0:
                            return hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.getDefaultInstance();
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

                public final com.google.protobuf.Message
                getResponsePrototype(
                        com.google.protobuf.Descriptors.MethodDescriptor method) {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.getResponsePrototype() given method " +
                                        "descriptor for wrong service type.");
                    }
                    switch (method.getIndex()) {
                        case 0:
                            return hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.getDefaultInstance();
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

            };
        }

        /**
         * <code>rpc getRowCount(.getRowCountRequest) returns (.getRowCountResponse);</code>
         */
        public abstract void getRowCount(
                com.google.protobuf.RpcController controller,
                hbase.org.ibm.developerworks.getRowCount.getRowCountRequest request,
                com.google.protobuf.RpcCallback<hbase.org.ibm.developerworks.getRowCount.getRowCountResponse> done);

        public static final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
            return hbase.org.ibm.developerworks.getRowCount.getDescriptor().getServices().get(0);
        }

        public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public final void callMethod(
                com.google.protobuf.Descriptors.MethodDescriptor method,
                com.google.protobuf.RpcController controller,
                com.google.protobuf.Message request,
                com.google.protobuf.RpcCallback<
                        com.google.protobuf.Message> done) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.callMethod() given method descriptor for wrong " +
                                "service type.");
            }
            switch (method.getIndex()) {
                case 0:
                    this.getRowCount(controller, (hbase.org.ibm.developerworks.getRowCount.getRowCountRequest) request,
                            com.google.protobuf.RpcUtil.<hbase.org.ibm.developerworks.getRowCount.getRowCountResponse>specializeCallback(
                                    done));
                    return;
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public final com.google.protobuf.Message
        getRequestPrototype(
                com.google.protobuf.Descriptors.MethodDescriptor method) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.getRequestPrototype() given method " +
                                "descriptor for wrong service type.");
            }
            switch (method.getIndex()) {
                case 0:
                    return hbase.org.ibm.developerworks.getRowCount.getRowCountRequest.getDefaultInstance();
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public final com.google.protobuf.Message
        getResponsePrototype(
                com.google.protobuf.Descriptors.MethodDescriptor method) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.getResponsePrototype() given method " +
                                "descriptor for wrong service type.");
            }
            switch (method.getIndex()) {
                case 0:
                    return hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.getDefaultInstance();
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public static Stub newStub(
                com.google.protobuf.RpcChannel channel) {
            return new Stub(channel);
        }

        public static final class Stub extends hbase.org.ibm.developerworks.getRowCount.ibmDeveloperWorksService implements Interface {
            private Stub(com.google.protobuf.RpcChannel channel) {
                this.channel = channel;
            }

            private final com.google.protobuf.RpcChannel channel;

            public com.google.protobuf.RpcChannel getChannel() {
                return channel;
            }

            public void getRowCount(
                    com.google.protobuf.RpcController controller,
                    hbase.org.ibm.developerworks.getRowCount.getRowCountRequest request,
                    com.google.protobuf.RpcCallback<hbase.org.ibm.developerworks.getRowCount.getRowCountResponse> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(0),
                        controller,
                        request,
                        hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.class,
                                hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.getDefaultInstance()));
            }
        }

        public static BlockingInterface newBlockingStub(
                com.google.protobuf.BlockingRpcChannel channel) {
            return new BlockingStub(channel);
        }

        public interface BlockingInterface {
            public hbase.org.ibm.developerworks.getRowCount.getRowCountResponse getRowCount(
                    com.google.protobuf.RpcController controller,
                    hbase.org.ibm.developerworks.getRowCount.getRowCountRequest request)
                    throws com.google.protobuf.ServiceException;
        }

        private static final class BlockingStub implements BlockingInterface {
            private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
                this.channel = channel;
            }

            private final com.google.protobuf.BlockingRpcChannel channel;

            public hbase.org.ibm.developerworks.getRowCount.getRowCountResponse getRowCount(
                    com.google.protobuf.RpcController controller,
                    hbase.org.ibm.developerworks.getRowCount.getRowCountRequest request)
                    throws com.google.protobuf.ServiceException {
                return (hbase.org.ibm.developerworks.getRowCount.getRowCountResponse) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(0),
                        controller,
                        request,
                        hbase.org.ibm.developerworks.getRowCount.getRowCountResponse.getDefaultInstance());
            }

        }

        // @@protoc_insertion_point(class_scope:ibmDeveloperWorksService)
    }

    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_getRowCountRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_getRowCountRequest_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_getRowCountResponse_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_getRowCountResponse_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\033ibmDeveloperworksDemo.proto\"%\n\022getRowC" +
                        "ountRequest\022\017\n\007reCount\030\001 \002(\010\"\'\n\023getRowCo" +
                        "untResponse\022\020\n\010rowCount\030\001 \002(\0032T\n\030ibmDeve" +
                        "loperWorksService\0228\n\013getRowCount\022\023.getRo" +
                        "wCountRequest\032\024.getRowCountResponseB*\n\026o" +
                        "rg.ibm.developerworksB\013getRowCountH\001\210\001\001"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_getRowCountRequest_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_getRowCountRequest_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_getRowCountRequest_descriptor,
                                new java.lang.String[]{"ReCount",});
                        internal_static_getRowCountResponse_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_getRowCountResponse_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_getRowCountResponse_descriptor,
                                new java.lang.String[]{"RowCount",});
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
